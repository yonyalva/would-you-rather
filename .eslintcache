[{"D:\\React Class\\reactproject\\src\\index.js":"1","D:\\React Class\\reactproject\\src\\components\\App.js":"2","D:\\React Class\\reactproject\\src\\middleware\\index.js":"3","D:\\React Class\\reactproject\\src\\reducers\\index.js":"4","D:\\React Class\\reactproject\\src\\components\\Home.js":"5","D:\\React Class\\reactproject\\src\\components\\Add.js":"6","D:\\React Class\\reactproject\\src\\components\\Nav.js":"7","D:\\React Class\\reactproject\\src\\components\\Answered.js":"8","D:\\React Class\\reactproject\\src\\components\\Unanswered.js":"9","D:\\React Class\\reactproject\\src\\components\\404.js":"10","D:\\React Class\\reactproject\\src\\actions\\shared.js":"11","D:\\React Class\\reactproject\\src\\actions\\authedUser.js":"12","D:\\React Class\\reactproject\\src\\middleware\\logger.js":"13","D:\\React Class\\reactproject\\src\\reducers\\authedUser.js":"14","D:\\React Class\\reactproject\\src\\reducers\\tweets.js":"15","D:\\React Class\\reactproject\\src\\reducers\\users.js":"16","D:\\React Class\\reactproject\\src\\components\\Tweet.js":"17","D:\\React Class\\reactproject\\src\\components\\Login.js":"18","D:\\React Class\\reactproject\\src\\actions\\tweets.js":"19","D:\\React Class\\reactproject\\src\\actions\\users.js":"20","D:\\React Class\\reactproject\\src\\utils\\api.js":"21","D:\\React Class\\reactproject\\src\\utils\\_DATA.js":"22","D:\\React Class\\reactproject\\src\\utils\\helpers.js":"23","D:\\React Class\\reactproject\\src\\components\\PollPage.js":"24","D:\\React Class\\reactproject\\src\\components\\questions.js":"25","D:\\React Class\\reactproject\\src\\components\\Questions.js":"26"},{"size":414,"mtime":1612807388852,"results":"27","hashOfConfig":"28"},{"size":1607,"mtime":1613412439033,"results":"29","hashOfConfig":"28"},{"size":155,"mtime":1612807389587,"results":"30","hashOfConfig":"28"},{"size":294,"mtime":1612807389791,"results":"31","hashOfConfig":"28"},{"size":1584,"mtime":1613015057323,"results":"32","hashOfConfig":"28"},{"size":2553,"mtime":1613325700731,"results":"33","hashOfConfig":"28"},{"size":1278,"mtime":1613162383709,"results":"34","hashOfConfig":"28"},{"size":1430,"mtime":1613098430762,"results":"35","hashOfConfig":"28"},{"size":1436,"mtime":1613337243580,"results":"36","hashOfConfig":"28"},{"size":653,"mtime":1613275102240,"results":"37","hashOfConfig":"28"},{"size":639,"mtime":1613081854034,"results":"38","hashOfConfig":"28"},{"size":138,"mtime":1612807388913,"results":"39","hashOfConfig":"28"},{"size":275,"mtime":1612807389650,"results":"40","hashOfConfig":"28"},{"size":230,"mtime":1612807389724,"results":"41","hashOfConfig":"28"},{"size":1447,"mtime":1613345076803,"results":"42","hashOfConfig":"28"},{"size":596,"mtime":1613345084303,"results":"43","hashOfConfig":"28"},{"size":3135,"mtime":1613411744205,"results":"44","hashOfConfig":"28"},{"size":1506,"mtime":1613406739540,"results":"45","hashOfConfig":"28"},{"size":2157,"mtime":1613345647381,"results":"46","hashOfConfig":"28"},{"size":137,"mtime":1613332021050,"results":"47","hashOfConfig":"28"},{"size":490,"mtime":1613317143065,"results":"48","hashOfConfig":"28"},{"size":4692,"mtime":1612837210521,"results":"49","hashOfConfig":"28"},{"size":778,"mtime":1613178529078,"results":"50","hashOfConfig":"28"},{"size":1145,"mtime":1613412305805,"results":"51","hashOfConfig":"28"},{"size":3993,"mtime":1613411807564,"results":"52","hashOfConfig":"28"},{"size":3993,"mtime":1613412260868,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1dgzov9",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"56"},"D:\\React Class\\reactproject\\src\\index.js",[],["117","118"],"D:\\React Class\\reactproject\\src\\components\\App.js",[],"D:\\React Class\\reactproject\\src\\middleware\\index.js",[],"D:\\React Class\\reactproject\\src\\reducers\\index.js",[],"D:\\React Class\\reactproject\\src\\components\\Home.js",["119","120"],"import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Tweet from './Tweet'\nimport { NavLink } from 'react-router-dom'\nimport Unanswered from './Unanswered'\nimport Login from './Login'\n\nclass Dashboard extends Component {\n  render() {\n    return (\n      <div>\n        {/* <h3 className='center' >Would you rather</h3>\n        <nav className='nav'>\n      <ul>\n        <li>\n          <NavLink to='/Unanswered' activeClassName='active'>\n            Unanswered\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to='/new' activeClassName='active'>\n            Answered\n          </NavLink>\n        </li>\n      </ul>\n    </nav> */}\n        {/* <ul className='dashboard-list'>\n          {this.props.tweetIds.map((id) => (\n            <li key={id}>\n              <Tweet id={id}/>\n            </li>\n          ))}\n        </ul> */}\n        {/* <ul className='dashboard-list'>\n          {this.props.tweetIds.filter((tweetIds) => !Object.keys(this.props.users[this.props.authedUser].answers).includes(tweetIds)).map((id) => (\n            <li key={id}>\n              <p>peo</p>\n              <Tweet id={id}/>\n            </li>\n          ))}\n        </ul> */}\n        {!this.props.authedUser &&\n        <Login />}\n        {this.props.authedUser &&\n        <Unanswered />}\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps ({ tweets, users, authedUser }) {\n  return {\n    authedUser,\n    users,\n    tweetIds: Object.keys(tweets)\n      .sort((a,b) => tweets[b].timestamp - tweets[a].timestamp)\n  }\n}\n\nexport default connect(mapStateToProps)(Dashboard)","D:\\React Class\\reactproject\\src\\components\\Add.js",[],"D:\\React Class\\reactproject\\src\\components\\Nav.js",[],"D:\\React Class\\reactproject\\src\\components\\Answered.js",[],"D:\\React Class\\reactproject\\src\\components\\Unanswered.js",[],"D:\\React Class\\reactproject\\src\\components\\404.js",[],"D:\\React Class\\reactproject\\src\\actions\\shared.js",[],"D:\\React Class\\reactproject\\src\\actions\\authedUser.js",[],"D:\\React Class\\reactproject\\src\\middleware\\logger.js",[],"D:\\React Class\\reactproject\\src\\reducers\\authedUser.js",[],"D:\\React Class\\reactproject\\src\\reducers\\tweets.js",["121"],"import { RECEIVE_TWEETS, RECEIVE_POLL, ADD_TWEET } from '../actions/tweets'\n\nexport default function tweets (state = {}, action) {\n  switch(action.type) {\n    case RECEIVE_TWEETS :\n      return {\n        ...state,\n        ...action.tweets\n      }\n    // case TOGGLE_TWEET :\n    //   return {\n    //     ...state,\n    //     [action.id]: {\n    //       ...state[action.id],\n    //       likes: action.hasLiked === true\n    //         ? state[action.id].likes.filter((uid) => uid !== action.authedUser)\n    //         : state[action.id].likes.concat([action.authedUser])\n    //     }\n    //   }\n      case RECEIVE_POLL :\n        return {\n          ...state,\n          [action.qid]: {\n            ...state[action.qid],\n            [action.answer]: {\n              ...state[action.qid][action.answer],\n              votes: state[action.qid][action.answer].votes.concat([action.authedUser])\n            }\n          }\n        }\n    // case ADD_TWEET :\n    //   const { tweet } = action\n\n    //   let replyingTo = {}\n    //   if (tweet.replyingTo !== null) {\n    //     replyingTo = {\n    //       [tweet.replyingTo]: {\n    //         ...state[tweet.replyingTo],\n    //         replies: state[tweet.replyingTo].replies.concat([tweet.id])\n    //       }\n    //     }\n    //   }\n\n    case ADD_TWEET :\n      const { tweet } = action\n      return {\n        ...state,\n        [action.tweet.id]: {...action.tweet}\n      }\n    default :\n      return state\n  }\n}","D:\\React Class\\reactproject\\src\\reducers\\users.js",[],"D:\\React Class\\reactproject\\src\\components\\Tweet.js",["122","123","124","125","126","127","128","129","130"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { formatTweet } from '../utils/helpers'\r\n// import TiArrowBackOutline from 'react-icons/lib/ti/arrow-back-outline'\r\n// import TiHeartOutline from 'react-icons/lib/ti/heart-outline'\r\n// import TiHeartFullOutline from 'react-icons/lib/ti/heart-full-outline'\r\n// import { handleToggleTweet } from '../actions/tweets'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport { _getQuestions, _getUsers } from '../utils/_DATA'\r\n\r\nclass Tweet extends Component {\r\n  // handleLike = (e) => {\r\n  //   e.preventDefault()\r\n\r\n  //   const { dispatch, tweet, authedUser, user } = this.props\r\n\r\n  //   dispatch(handleToggleTweet({\r\n  //     id: tweet.id,\r\n  //     hasLiked: tweet.hasLiked,\r\n  //     authedUser\r\n  //   }))\r\n  // }\r\n  toParent = (e, id) => {\r\n    e.preventDefault()\r\n    this.props.history.push(`/tweet/${id}`)\r\n  }\r\n  render() {\r\n    const { tweet } = this.props\r\n\r\n    if (tweet === null) {\r\n      return <p>This Tweet doesn't existd</p>\r\n    }\r\n\r\n    const {\r\n      name, avatar, timestamp, text, optionOne, authedUser, hasLiked, likes, replies, id, parent\r\n    } = tweet\r\n\r\n    return (\r\n      // <Link to={`/tweet/${id}`} className='tweet'>\r\n      <div className='tweet'>\r\n        <img\r\n          src={avatar}\r\n          alt={`Avatar of ${name}`}\r\n          className='avatar'\r\n        />\r\n        <div className='tweet-info'>\r\n          <div>\r\n            <span>{name}</span>\r\n            {/* <div>{formatDate(timestamp)}</div> */}\r\n            {/* {parent && (\r\n              <button className='replying-to' onClick={(e) => this.toParent(e, parent.id)}>\r\n                Replying to @{parent.author}\r\n              </button>\r\n            )} */}\r\n            <p>...{optionOne.text.slice(0, 15)}...</p>\r\n            {/* <p>...{Object.keys(answers)}...</p> */}\r\n            {/* <p>{Object.keys(this.props.users)}</p> */}\r\n          </div>\r\n          {/* <div className='tweet-icons'>\r\n            <TiArrowBackOutline className='tweet-icon' />\r\n            <span>{replies !== 0 && replies}</span> */}\r\n            <Link to={`/questions/${id}`}><button className='btn-question'>\r\n              {/* {hasLiked === true\r\n                ? <TiHeartFullOutline color='#e0245e' className='tweet-icon' />\r\n                : <TiHeartOutline className='tweet-icon'/>} */}\r\n                View Poll\r\n            </button>\r\n            </Link>\r\n            {/* {Object.keys(this.props.users[this.props.authedUser].answers} */}\r\n            {/* <span>{likes !== 0 && likes}</span>\r\n          </div> */}\r\n        </div>\r\n      {/* </Link> */}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps ({authedUser, users, tweets}, { id }) {\r\n  const tweet = tweets[id]\r\n  const parentTweet = tweet ? tweets[tweet.replyingTo] : null\r\n\r\n  return {\r\n    authedUser,\r\n    users,\r\n    tweetIds: Object.keys(tweets)\r\n    .sort((a,b) => tweets[b].timestamp - tweets[a].timestamp),\r\n    tweet: tweet\r\n      ? formatTweet(tweet, users[tweet.author], authedUser, parentTweet )\r\n      : null\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(Tweet))","D:\\React Class\\reactproject\\src\\components\\Login.js",["131","132"],"import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux'\r\nimport { _getUsers } from '../utils/_DATA'\r\nimport {setAuthedUser} from '../actions/authedUser.js'\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass Login extends Component {\r\n  state = { loggeduser: \"\" }\r\n\r\n  handleChange = (e, props) => {\r\n    this.state.loggeduser = e.target.value\r\n    const { dispatch } = this.props\r\n    dispatch(setAuthedUser(this.state.loggeduser))\r\n    /*\r\n    commenting the below out as the rubic is confusing on whether\r\n    once the user is logged, is supposed to be redirected to the home page (#4) \r\n    or stay on the same page (#5) where the request to login originated from.\r\n    Removing the comment below will redirect to the home page.\r\n    */\r\n    // this.props.history.replace('/')  \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='center'>\r\n          <h3 >Welcome to Would you Rather...!</h3>\r\n          <h4 style={{color:'red'}}>Please select your user to sign in</h4>\r\n          <select onChange={(e) => {this.handleChange(e)}} defaultValue='1'>\r\n            <option value='1' disabled >Select User</option>\r\n            {this.props.usersIds.map((user) => (\r\n            <option value={user}>{user}</option>\r\n            ))}\r\n          </select>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps ({ users, authedUser }) {\r\n  return {\r\n    authedUser,\r\n    usersIds: Object.keys(users)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(Login))\r\n","D:\\React Class\\reactproject\\src\\actions\\tweets.js",[],"D:\\React Class\\reactproject\\src\\actions\\users.js",[],"D:\\React Class\\reactproject\\src\\utils\\api.js",[],"D:\\React Class\\reactproject\\src\\utils\\_DATA.js",[],"D:\\React Class\\reactproject\\src\\utils\\helpers.js",["133","134"],"export function formatDate (timestamp) {\r\n  const d = new Date(timestamp)\r\n  const time = d.toLocaleTimeString('en-US')\r\n  return time.substr(0, 5) + time.slice(-2) + ' | ' + d.toLocaleDateString()\r\n}\r\n\r\nexport function formatTweet (tweet, author, authedUser, parentTweet ) {\r\n  const { id, likes, replies, text, timestamp, optionOne, optionTwo  } = tweet\r\n  const { name, avatarURL } = author\r\n\r\n  return {\r\n    name,\r\n    id,\r\n    timestamp,\r\n    text,\r\n    avatar: avatarURL,\r\n    optionOne,\r\n    optionTwo,\r\n    // answers,\r\n    authedUser,\r\n    // likes: likes.length,\r\n    // replies: replies.length,\r\n    // hasLiked: likes.includes(authedUser),\r\n    // parent: !parentTweet ? null : {\r\n    //   author: parentTweet.author,\r\n    //   id: parentTweet.id,\r\n    // }\r\n  }\r\n}",["135","136"],"D:\\React Class\\reactproject\\src\\components\\PollPage.js",["137","138","139"],"import React, { Component, Fragment } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Tweet from './Tweet'\r\nimport Add from './Add'\r\nimport Login from './Login'\r\nimport Qustions from './Questions'\r\n\r\nclass PollPage extends Component {\r\n  render() {\r\n    const { id, replies } = this.props\r\n    return (\r\n      <div>\r\n        {!this.props.authedUser &&\r\n        <Login />}\r\n        {this.props.authedUser &&\r\n        <Fragment>     \r\n        <Qustions id={id} />\r\n        {/* <Add id={id} /> */}\r\n        {/* {replies.length !== 0 && <h3 className='center'>Replies</h3>}\r\n        <ul>\r\n          {replies.map((replyId) => (\r\n            <li key={replyId}>\r\n              <Tweet id={replyId}/>\r\n            </li>\r\n          ))}\r\n        </ul> */}\r\n      </Fragment> }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps ({ authedUser, tweets, users }, props) {\r\n  const { id } = props.match.params\r\n\r\n  return {\r\n    id,\r\n    authedUser\r\n    // replies: !tweets[id]\r\n    //   ? []\r\n    //   : tweets[id].replies.sort((a,b,) => tweets[b].timestamp - tweets[a].timestamp)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(PollPage)","D:\\React Class\\reactproject\\src\\components\\questions.js",["140","141","142","143","144","145","146","147","148","149"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { formatTweet } from '../utils/helpers'\r\nimport { handlePoll } from '../actions/tweets'\r\nimport { withRouter, Redirect } from 'react-router-dom'\r\nimport { _getQuestions, _getUsers } from '../utils/_DATA'\r\n\r\nclass questions extends Component {\r\n\r\n  state = {\r\n    name: \"pollgroup\",\r\n    toHome: false,\r\n  }\r\n\r\n  onValueChange = (e) => {\r\n    this.setState(() => ({\r\n      selectedOption: e.target.value\r\n    }))\r\n  }\r\n\r\n  // formSubmit = (e) => {\r\n  //   e.preventDefault();\r\n  //   console.log(this.state.selectedOption)\r\n  // }\r\n\r\n  // handleLike = (e) => {\r\n  //   e.preventDefault()\r\n\r\n  //   const { dispatch, tweet, authedUser, user } = this.props\r\n\r\n  //   dispatch(handleToggleTweet({\r\n  //     id: tweet.id,\r\n  //     hasLiked: tweet.hasLiked,\r\n  //     authedUser\r\n  //   }))\r\n  // }\r\n  // toParent = (e, id) => {\r\n  //   e.preventDefault()\r\n  //   this.props.history.push(`/tweet/${id}`)\r\n  // }\r\n\r\n  // Below is from Add\r\n  // handleSubmit = (e) => {\r\n  //   e.preventDefault()\r\n\r\n  //   const { optionOneText, optionTwoText } = this.state\r\n  //   const { dispatch, id } = this.props\r\n\r\n  //   dispatch(handleAddTweet(optionOneText, optionTwoText))\r\n\r\n  //   this.setState(() => ({\r\n  //     optionOneText: '',\r\n  //     optionTwoText: '',\r\n  //     toHome: id ? false : true,\r\n  //   }))\r\n  // }\r\n\r\n    formSubmit = (e) => {\r\n    e.preventDefault()\r\n    const answer = this.state.selectedOption\r\n    const { dispatch, tweet, authedUser, qid } = this.props\r\n\r\n    dispatch(handlePoll({ qid: tweet.id, authedUser, answer}))\r\n    this.setState(() => ({\r\n      toHome: qid ? false : true,\r\n    }))\r\n    }\r\n\r\n  toParent = (e, id) => {\r\n    e.preventDefault()\r\n    this.props.history.push(`/tweet/${id}`)\r\n  }\r\n  render() {\r\n    const { toHome } = this.state\r\n\r\n    if (toHome === true) {\r\n      return <Redirect to='/' />\r\n    }\r\n\r\n    const { tweet } = this.props\r\n\r\n    if (tweet === null) {\r\n      return <p>This Tweet doesn't existd</p>\r\n    }\r\n\r\n    const {\r\n      name, avatar, timestamp, text, optionOne, optionTwo, authedUser, hasLiked, likes, replies, id, parent\r\n    } = tweet\r\n\r\n    return (\r\n      <div className='tweet'>\r\n        <img src={avatar} alt={`Avatar of ${name}`} className='avatar'/>\r\n        <div className='tweet-info'>\r\n          <div>\r\n            <span>{name} asks:</span>\r\n            <h3>Would you Rather...</h3>\r\n          </div>\r\n          <form onSubmit={this.formSubmit}>\r\n            <div className=\"radio\">\r\n              <label className=\"checkcontainer\"> \r\n                <input type=\"radio\" value=\"optionOne\" \r\n                  checked={this.state.selectedOption === \"optionOne\"}\r\n                  onChange={this.onValueChange}/>  {optionOne.text}\r\n                  <span className=\"checkmark\"></span>              \r\n              </label>\r\n            </div>\r\n            <br></br>\r\n            <div className=\"radio\">\r\n              <label className=\"checkcontainer\">\r\n                <input type=\"radio\" value=\"optionTwo\"\r\n                  checked={this.state.selectedOption === \"optionTwo\"}\r\n                  onChange={this.onValueChange}/> {optionTwo.text}\r\n                  <span className=\"checkmark\"></span>              \r\n              </label>\r\n              {/* <div style={{marginTop:'1em'}}>Selected option is : {this.state.selectedOption}</div> */}\r\n            </div>\r\n            <button className=\"btn\" disabled={!this.state.selectedOption}>\r\n              Submit\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps ({authedUser, users, tweets}, { id }) {\r\n  const tweet = tweets[id]\r\n  const parentTweet = tweet ? tweets[tweet.replyingTo] : null\r\n\r\n  return {\r\n    authedUser,\r\n    users,\r\n    tweet: tweet\r\n      ? formatTweet(tweet, users[tweet.author], authedUser, parentTweet )\r\n      : null\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(questions))",["150","151"],"D:\\React Class\\reactproject\\src\\components\\Questions.js",["152","153","154","155","156","157","158","159","160","161"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { formatTweet } from '../utils/helpers'\r\nimport { handlePoll } from '../actions/tweets'\r\nimport { withRouter, Redirect } from 'react-router-dom'\r\nimport { _getQuestions, _getUsers } from '../utils/_DATA'\r\n\r\nclass Questions extends Component {\r\n\r\n  state = {\r\n    name: \"pollgroup\",\r\n    toHome: false,\r\n  }\r\n\r\n  onValueChange = (e) => {\r\n    this.setState(() => ({\r\n      selectedOption: e.target.value\r\n    }))\r\n  }\r\n\r\n  // formSubmit = (e) => {\r\n  //   e.preventDefault();\r\n  //   console.log(this.state.selectedOption)\r\n  // }\r\n\r\n  // handleLike = (e) => {\r\n  //   e.preventDefault()\r\n\r\n  //   const { dispatch, tweet, authedUser, user } = this.props\r\n\r\n  //   dispatch(handleToggleTweet({\r\n  //     id: tweet.id,\r\n  //     hasLiked: tweet.hasLiked,\r\n  //     authedUser\r\n  //   }))\r\n  // }\r\n  // toParent = (e, id) => {\r\n  //   e.preventDefault()\r\n  //   this.props.history.push(`/tweet/${id}`)\r\n  // }\r\n\r\n  // Below is from Add\r\n  // handleSubmit = (e) => {\r\n  //   e.preventDefault()\r\n\r\n  //   const { optionOneText, optionTwoText } = this.state\r\n  //   const { dispatch, id } = this.props\r\n\r\n  //   dispatch(handleAddTweet(optionOneText, optionTwoText))\r\n\r\n  //   this.setState(() => ({\r\n  //     optionOneText: '',\r\n  //     optionTwoText: '',\r\n  //     toHome: id ? false : true,\r\n  //   }))\r\n  // }\r\n\r\n    formSubmit = (e) => {\r\n    e.preventDefault()\r\n    const answer = this.state.selectedOption\r\n    const { dispatch, tweet, authedUser, qid } = this.props\r\n\r\n    dispatch(handlePoll({ qid: tweet.id, authedUser, answer}))\r\n    this.setState(() => ({\r\n      toHome: qid ? false : true,\r\n    }))\r\n    }\r\n\r\n  toParent = (e, id) => {\r\n    e.preventDefault()\r\n    this.props.history.push(`/tweet/${id}`)\r\n  }\r\n  render() {\r\n    const { toHome } = this.state\r\n\r\n    if (toHome === true) {\r\n      return <Redirect to='/' />\r\n    }\r\n\r\n    const { tweet } = this.props\r\n\r\n    if (tweet === null) {\r\n      return <p>This Tweet doesn't existd</p>\r\n    }\r\n\r\n    const {\r\n      name, avatar, timestamp, text, optionOne, optionTwo, authedUser, hasLiked, likes, replies, id, parent\r\n    } = tweet\r\n\r\n    return (\r\n      <div className='tweet'>\r\n        <img src={avatar} alt={`Avatar of ${name}`} className='avatar'/>\r\n        <div className='tweet-info'>\r\n          <div>\r\n            <span>{name} asks:</span>\r\n            <h3>Would you Rather...</h3>\r\n          </div>\r\n          <form onSubmit={this.formSubmit}>\r\n            <div className=\"radio\">\r\n              <label className=\"checkcontainer\"> \r\n                <input type=\"radio\" value=\"optionOne\" \r\n                  checked={this.state.selectedOption === \"optionOne\"}\r\n                  onChange={this.onValueChange}/>  {optionOne.text}\r\n                  <span className=\"checkmark\"></span>              \r\n              </label>\r\n            </div>\r\n            <br></br>\r\n            <div className=\"radio\">\r\n              <label className=\"checkcontainer\">\r\n                <input type=\"radio\" value=\"optionTwo\"\r\n                  checked={this.state.selectedOption === \"optionTwo\"}\r\n                  onChange={this.onValueChange}/> {optionTwo.text}\r\n                  <span className=\"checkmark\"></span>              \r\n              </label>\r\n              {/* <div style={{marginTop:'1em'}}>Selected option is : {this.state.selectedOption}</div> */}\r\n            </div>\r\n            <button className=\"btn\" disabled={!this.state.selectedOption}>\r\n              Submit\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps ({authedUser, users, tweets}, { id }) {\r\n  const tweet = tweets[id]\r\n  const parentTweet = tweet ? tweets[tweet.replyingTo] : null\r\n\r\n  return {\r\n    authedUser,\r\n    users,\r\n    tweet: tweet\r\n      ? formatTweet(tweet, users[tweet.author], authedUser, parentTweet )\r\n      : null\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(Questions))",{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","severity":1,"message":"167","line":3,"column":8,"nodeType":"168","messageId":"169","endLine":3,"endColumn":13},{"ruleId":"166","severity":1,"message":"170","line":4,"column":10,"nodeType":"168","messageId":"169","endLine":4,"endColumn":17},{"ruleId":"166","severity":1,"message":"171","line":45,"column":15,"nodeType":"168","messageId":"169","endLine":45,"endColumn":20},{"ruleId":"166","severity":1,"message":"172","line":9,"column":10,"nodeType":"168","messageId":"169","endLine":9,"endColumn":23},{"ruleId":"166","severity":1,"message":"173","line":9,"column":25,"nodeType":"168","messageId":"169","endLine":9,"endColumn":34},{"ruleId":"166","severity":1,"message":"174","line":35,"column":21,"nodeType":"168","messageId":"169","endLine":35,"endColumn":30},{"ruleId":"166","severity":1,"message":"175","line":35,"column":32,"nodeType":"168","messageId":"169","endLine":35,"endColumn":36},{"ruleId":"166","severity":1,"message":"176","line":35,"column":49,"nodeType":"168","messageId":"169","endLine":35,"endColumn":59},{"ruleId":"166","severity":1,"message":"177","line":35,"column":61,"nodeType":"168","messageId":"169","endLine":35,"endColumn":69},{"ruleId":"166","severity":1,"message":"178","line":35,"column":71,"nodeType":"168","messageId":"169","endLine":35,"endColumn":76},{"ruleId":"166","severity":1,"message":"179","line":35,"column":78,"nodeType":"168","messageId":"169","endLine":35,"endColumn":85},{"ruleId":"166","severity":1,"message":"180","line":35,"column":91,"nodeType":"168","messageId":"169","endLine":35,"endColumn":97},{"ruleId":"166","severity":1,"message":"173","line":3,"column":10,"nodeType":"168","messageId":"169","endLine":3,"endColumn":19},{"ruleId":"181","severity":1,"message":"182","line":11,"column":5,"nodeType":"183","endLine":11,"endColumn":15},{"ruleId":"166","severity":1,"message":"178","line":8,"column":15,"nodeType":"168","messageId":"169","endLine":8,"endColumn":20},{"ruleId":"166","severity":1,"message":"179","line":8,"column":22,"nodeType":"168","messageId":"169","endLine":8,"endColumn":29},{"ruleId":"162","replacedBy":"184"},{"ruleId":"164","replacedBy":"185"},{"ruleId":"166","severity":1,"message":"167","line":3,"column":8,"nodeType":"168","messageId":"169","endLine":3,"endColumn":13},{"ruleId":"166","severity":1,"message":"186","line":4,"column":8,"nodeType":"168","messageId":"169","endLine":4,"endColumn":11},{"ruleId":"166","severity":1,"message":"179","line":10,"column":17,"nodeType":"168","messageId":"169","endLine":10,"endColumn":24},{"ruleId":"166","severity":1,"message":"172","line":6,"column":10,"nodeType":"168","messageId":"169","endLine":6,"endColumn":23},{"ruleId":"166","severity":1,"message":"173","line":6,"column":25,"nodeType":"168","messageId":"169","endLine":6,"endColumn":34},{"ruleId":"166","severity":1,"message":"174","line":87,"column":21,"nodeType":"168","messageId":"169","endLine":87,"endColumn":30},{"ruleId":"166","severity":1,"message":"175","line":87,"column":32,"nodeType":"168","messageId":"169","endLine":87,"endColumn":36},{"ruleId":"166","severity":1,"message":"176","line":87,"column":60,"nodeType":"168","messageId":"169","endLine":87,"endColumn":70},{"ruleId":"166","severity":1,"message":"177","line":87,"column":72,"nodeType":"168","messageId":"169","endLine":87,"endColumn":80},{"ruleId":"166","severity":1,"message":"178","line":87,"column":82,"nodeType":"168","messageId":"169","endLine":87,"endColumn":87},{"ruleId":"166","severity":1,"message":"179","line":87,"column":89,"nodeType":"168","messageId":"169","endLine":87,"endColumn":96},{"ruleId":"166","severity":1,"message":"187","line":87,"column":98,"nodeType":"168","messageId":"169","endLine":87,"endColumn":100},{"ruleId":"166","severity":1,"message":"180","line":87,"column":102,"nodeType":"168","messageId":"169","endLine":87,"endColumn":108},{"ruleId":"162","replacedBy":"188"},{"ruleId":"164","replacedBy":"189"},{"ruleId":"166","severity":1,"message":"172","line":6,"column":10,"nodeType":"168","messageId":"169","endLine":6,"endColumn":23},{"ruleId":"166","severity":1,"message":"173","line":6,"column":25,"nodeType":"168","messageId":"169","endLine":6,"endColumn":34},{"ruleId":"166","severity":1,"message":"174","line":87,"column":21,"nodeType":"168","messageId":"169","endLine":87,"endColumn":30},{"ruleId":"166","severity":1,"message":"175","line":87,"column":32,"nodeType":"168","messageId":"169","endLine":87,"endColumn":36},{"ruleId":"166","severity":1,"message":"176","line":87,"column":60,"nodeType":"168","messageId":"169","endLine":87,"endColumn":70},{"ruleId":"166","severity":1,"message":"177","line":87,"column":72,"nodeType":"168","messageId":"169","endLine":87,"endColumn":80},{"ruleId":"166","severity":1,"message":"178","line":87,"column":82,"nodeType":"168","messageId":"169","endLine":87,"endColumn":87},{"ruleId":"166","severity":1,"message":"179","line":87,"column":89,"nodeType":"168","messageId":"169","endLine":87,"endColumn":96},{"ruleId":"166","severity":1,"message":"187","line":87,"column":98,"nodeType":"168","messageId":"169","endLine":87,"endColumn":100},{"ruleId":"166","severity":1,"message":"180","line":87,"column":102,"nodeType":"168","messageId":"169","endLine":87,"endColumn":108},"no-native-reassign",["190"],"no-negated-in-lhs",["191"],"no-unused-vars","'Tweet' is defined but never used.","Identifier","unusedVar","'NavLink' is defined but never used.","'tweet' is assigned a value but never used.","'_getQuestions' is defined but never used.","'_getUsers' is defined but never used.","'timestamp' is assigned a value but never used.","'text' is assigned a value but never used.","'authedUser' is assigned a value but never used.","'hasLiked' is assigned a value but never used.","'likes' is assigned a value but never used.","'replies' is assigned a value but never used.","'parent' is assigned a value but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression",["190"],["191"],"'Add' is defined but never used.","'id' is assigned a value but never used.",["190"],["191"],"no-global-assign","no-unsafe-negation"]